/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as VerifyEmailImport } from './routes/verify-email'
import { Route as VerifiedEmailImport } from './routes/verified-email'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedShopImport } from './routes/_authenticated/shop'
import { Route as AuthenticatedSellerDashboardImport } from './routes/_authenticated/_seller/dashboard'

// Create/Update Routes

const VerifyEmailRoute = VerifyEmailImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRoute,
} as any)

const VerifiedEmailRoute = VerifiedEmailImport.update({
  id: '/verified-email',
  path: '/verified-email',
  getParentRoute: () => rootRoute,
} as any)

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedShopRoute = AuthenticatedShopImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedSellerDashboardRoute =
  AuthenticatedSellerDashboardImport.update({
    id: '/_seller/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/verified-email': {
      id: '/verified-email'
      path: '/verified-email'
      fullPath: '/verified-email'
      preLoaderRoute: typeof VerifiedEmailImport
      parentRoute: typeof rootRoute
    }
    '/verify-email': {
      id: '/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof VerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/shop': {
      id: '/_authenticated/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof AuthenticatedShopImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/_seller/dashboard': {
      id: '/_authenticated/_seller/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedSellerDashboardImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedShopRoute: typeof AuthenticatedShopRoute
  AuthenticatedSellerDashboardRoute: typeof AuthenticatedSellerDashboardRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedShopRoute: AuthenticatedShopRoute,
  AuthenticatedSellerDashboardRoute: AuthenticatedSellerDashboardRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/verified-email': typeof VerifiedEmailRoute
  '/verify-email': typeof VerifyEmailRoute
  '/shop': typeof AuthenticatedShopRoute
  '/dashboard': typeof AuthenticatedSellerDashboardRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/verified-email': typeof VerifiedEmailRoute
  '/verify-email': typeof VerifyEmailRoute
  '/shop': typeof AuthenticatedShopRoute
  '/dashboard': typeof AuthenticatedSellerDashboardRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/reset-password': typeof ResetPasswordRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/verified-email': typeof VerifiedEmailRoute
  '/verify-email': typeof VerifyEmailRoute
  '/_authenticated/shop': typeof AuthenticatedShopRoute
  '/_authenticated/_seller/dashboard': typeof AuthenticatedSellerDashboardRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/verified-email'
    | '/verify-email'
    | '/shop'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/verified-email'
    | '/verify-email'
    | '/shop'
    | '/dashboard'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/verified-email'
    | '/verify-email'
    | '/_authenticated/shop'
    | '/_authenticated/_seller/dashboard'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  VerifiedEmailRoute: typeof VerifiedEmailRoute
  VerifyEmailRoute: typeof VerifyEmailRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  ResetPasswordRoute: ResetPasswordRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  VerifiedEmailRoute: VerifiedEmailRoute,
  VerifyEmailRoute: VerifyEmailRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/reset-password",
        "/sign-in",
        "/sign-up",
        "/verified-email",
        "/verify-email"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/shop",
        "/_authenticated/_seller/dashboard"
      ]
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/verified-email": {
      "filePath": "verified-email.tsx"
    },
    "/verify-email": {
      "filePath": "verify-email.tsx"
    },
    "/_authenticated/shop": {
      "filePath": "_authenticated/shop.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/_seller/dashboard": {
      "filePath": "_authenticated/_seller/dashboard.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
